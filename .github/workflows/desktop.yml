name: 'Desktop'

env:
  NODE_VERSION: 18

on:
  pull_request:
    branches: [ "main", "master", "prod*" ]
    tags: [ "v*.*.*" ]
  push:
    branches: [ "main", "master", "prod*" ]
    tags: [ "v*.*.*" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: environment

jobs:
  constructor:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.constructor.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              body: 'View the assets bundled below to find a suitable installer for your host system',
              draft: true,
              name: `v${process.env.PACKAGE_VERSION}`,
              owner: context.repo.owner,
              prerelease: true,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`
            })
            return data.id
  builder:
    needs: constructor
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: rust (stable)
        uses: dtolnay/rust-toolchain@stable
      - name: langspace
        run: |
          rustup default nightly
          rustup target add wasm32-unknown-unknown wasm32-wasi --toolchain nightly
          npm install -g wasm-pack
      - name: configure environment (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update -y 
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - run: npm install && npm run build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          bundleIdentifier: puzzled
          distDir: build
          releaseId: ${{ needs.constructor.outputs.release_id }}
  pre-release:
    needs: [ builder, constructor ]
    runs-on: ubuntu-20.04
    steps:
      - name: publish pre-release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.constructor.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              bundle_identifier: puzzled,
              draft: false,
              prerelease: true,
              owner: context.repo.owner,
              release_id: process.env.release_id,
              repo: context.repo.repo
            })
